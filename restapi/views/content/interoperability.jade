extends ../layout
block content
      section#post
        article
          header.wrpl
            h1 Interoperability
            time Last update: #{lastUpdate}
            details
              summary Description:
              p The interoperability empirically analyses the SPARQL 1.0 and SPARQL 1.1 features supported by an endpoint. The goal is to see if the endpoint accepts and returns a valid response for queries using a variety of different SPARQL 1.0 and SPARQL 1.1 features. The queries we use are inspired by the official W3C test-case suites. However, in the interest of not overwhelming endpoints with very expensive queries, we have modified the original queries to be more friendly to remote endpoints by inserting URIs that should not appear in the remote data; thus the queries should not generate large (intermediate) result sets.
              p Since we do not have control over remote data, we cannot verify if a result is correct. We would expect that if an endpoint does not support a feature (e.g., it's using a SPARQL 1.0 version engine and thus does not support SPARQL 1.1 features), that it would throw a parse-exception or similar, which would not count as a valid response. Hence, here we verify that the endpoint can return a valid SPARQL response for a valid SPARQL (1.1) query, not necessarily a correct response.
              p The specific queries that we run can be seen by clicking on a specific endpoint and hovering over the query shortcuts in the interoperability pane (where the exceptions encountered for that endpoint, if any, can also be found).
              p Interoperability experiments are run on a monthly basis.
      .line
      section#posts.default-area
        article.wrp(style='padding-bottom: 1em;')
          .wrplInnerBox(style='height: 100%;width:100%')
            - function numberWithCommas(x) {if (x) return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");}
            div
              b #{parseFloat((nbCompliantSPARQL1Features/nbEndpointsTotal*100).toFixed(2))+ '%'} 
              | (#{nbCompliantSPARQL1Features}/#{nbEndpointsTotal}) of the available endpoints are 
              b compliant with some SPARQL 1.0 features
            div
              b #{parseFloat((nbFullCompliantSPARQL1Features/nbEndpointsTotal*100).toFixed(2))+ '%'} 
              | (#{nbFullCompliantSPARQL1Features}/#{nbEndpointsTotal}) of the available endpoints are 
              b compliant with all SPARQL 1.0 features
            div
              b #{parseFloat((nbCompliantSPARQL11Features/nbEndpointsTotal*100).toFixed(2))+ '%'} 
              | (#{nbCompliantSPARQL11Features}/#{nbEndpointsTotal}) of the available endpoints are 
              b compliant with some SPARQL 1.1 features
            div
              b #{parseFloat((nbFullCompliantSPARQL11Features/nbEndpointsTotal*100).toFixed(2))+ '%'} 
              | (#{nbFullCompliantSPARQL11Features}/#{nbEndpointsTotal}) of the available endpoints are 
              b compliant with all SPARQL 1.1 features
        article.wrp(style='padding-bottom: 1em;')
          .wrplInnerBox(style='height: 100%;')
            section
              .wrpl(style='padding-left: 2em;')
                img(src='/images/green.png')
                span(style='padding-left: 0.75em;') Compliant with 
                b 100% 
                | of the features
              .wrpl(style='padding-left: 2em;')
                img(src='/images/orange.png')
                span(style='padding-left: 0.75em;') Compliant with 
                b [50%-100%[ 
                |of the features
              .wrpl(style='padding-left: 2em;')
                img(src='/images/red.png')
                span(style='padding-left: 0.75em;') Compliant with 
                b ]0%-50%[ 
                |of the features
              .wrpl(style='padding-left: 2em;')
                img(src='/images/gray.png')
                span(style='padding-left: 0.75em;') Compliant with 
                b 0% 
                | of the features
        article.wrp
          .wrplInnerBox(style='height: 100%;')
            table#table_current.sortable.psp-table(cellspacing='0', cellpadding='0', border='0', width='100%')
              thead
                tr
                  th.tablehead(scope='col', width='50%') SPARQL Endpoint
                  th.tablehead(width='25%') 
                    span(onmouseover='tooltip.show(\'#{configInterop["SPARQL 1.0"]}\')', onmouseout='tooltip.hide();') SPARQL 1.0 features
                  th.tablehead(width='25%') 
                    span(onmouseover='tooltip.show(\'#{configInterop["SPARQL 1.1"]}\')', onmouseout='tooltip.hide();') SPARQL 1.1 features
              tbody
                - each ep, i in ftasks_agg
                  tr(class=(i % 2 == 0) ? 'odd' : 'even')
                    //-Display Endpoint Label
                    //-TODO: if more than one endpoint then display how many and their names 
                    if ep.endpoint.datasets.length>1
                      - var generateTooltip = function(datasets){tooltipHtml='This endpoint includes <b>'+datasets.length+' datasets</b>:<ul>';
                      -   for(var i in datasets){tooltipHtml+='<li>'+datasets[i].label+'</li>';}
                      -   tooltipHtml+='</ul>';
                      -   return tooltipHtml;
                      - }
                      td
                        a(href="/endpoint?uri=#{encodeURIComponent(ep.endpoint.uri)}")
                          span(onmouseover='tooltip.show(\'#{generateTooltip(ep.endpoint.datasets)}\')', onmouseout='tooltip.hide();') #{ep.endpoint.uri} (#{ep.endpoint.datasets.length})
                    else
                      if ep.endpoint.datasets.length>0
                        td 
                          a(href="/endpoint?uri=#{encodeURIComponent(ep.endpoint.uri)}") #{ep.endpoint.datasets[0].label}
                      else 
                        td
                          a(href="/endpoint?uri=#{encodeURIComponent(ep.endpoint.uri)}") #{ep.endpoint.uri}
                     //-Display SPARQL 1.0 
                    if ep.nbCompliantSPARQL1Features==nbSPARQL1Features
                      td.tdcenter(sorttable_customkey="1")
                        img(src='/images/green.png')
                    else
                      if ep.nbCompliantSPARQL1Features>0 && (ep.nbCompliantSPARQL1Features/nbSPARQL1Features)>0.5
                        td.tdcenter(sorttable_customkey="2")
                          img(src='/images/orange.png')
                      else
                        if ep.nbCompliantSPARQL1Features>0 && (ep.nbCompliantSPARQL1Features/nbSPARQL1Features)<=0.5
                          td.tdcenter(sorttable_customkey="3")
                            img(src='/images/red.png')
                        else
                          if ep.nbCompliantSPARQL11Features==0
                            td.tdcenter(sorttable_customkey="5")
                              .textDisabled n/a
                          else
                            td.tdcenter(sorttable_customkey="4")
                              img(src='/images/gray.png')
                    //-Display SPARQL 1.0
                    if ep.nbCompliantSPARQL11Features==nbSPARQL11Features
                      td.tdcenter(sorttable_customkey="1")
                        img(src='/images/green.png')
                    else
                      if ep.nbCompliantSPARQL11Features>0 && (ep.nbCompliantSPARQL11Features/nbSPARQL11Features)>0.5
                        td.tdcenter(sorttable_customkey="2")
                          img(src='/images/orange.png')
                      else
                        if ep.nbCompliantSPARQL11Features>0 && (ep.nbCompliantSPARQL11Features/nbSPARQL11Features)<=0.5
                          td.tdcenter(sorttable_customkey="3")
                            img(src='/images/red.png')
                        else
                          if ep.nbCompliantSPARQL1Features==0
                            td.tdcenter(sorttable_customkey="5")
                              .textDisabled n/a
                          else
                            td.tdcenter(sorttable_customkey="4")
                              img(src='/images/gray.png')